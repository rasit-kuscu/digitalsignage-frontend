{"version":3,"sources":["app/myprofile/services/myprofile.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAWA;gBACE,0BAAmB,QAAiB,EAAW,cAA6B;oBAAzD,aAAQ,GAAR,QAAQ,CAAS;oBAAW,mBAAc,GAAd,cAAc,CAAe;gBAC5E,CAAC;gBAEM,+BAAI,GAAX;oBACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,iBAAiB,CAAC;yBACrE,GAAG,CAAC,UAAC,IAAc,IAAK,OAAc,IAAI,CAAC,IAAI,EAAE,EAAzB,CAAyB,CAAC,CAAC;gBACxD,CAAC;gBAEM,+BAAI,GAAX,UAAY,SAAoB;oBAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAC,OAAO,EAAE,wBAAc,EAAC,CAAC;yBAC7H,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAa,QAAQ,CAAC,IAAI,EAAE,EAA5B,CAA4B,CAAC,CAAC;gBAC/D,CAAC;gBAbH;oBAAC,iBAAU,EAAE;;oCAAA;gBAcb,uBAAC;YAAD,CAbA,AAaC,IAAA;YAbD,+CAaC,CAAA","file":"app/myprofile/services/myprofile.service.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport { Response } from '@angular/http';\nimport { AuthHttp } from 'angular2-jwt';\nimport { MyProfile } from '../models/myprofile';\nimport { RestReponse } from '../../common/rest.response';\nimport { contentHeaders } from '../../common/headers';\nimport { SharedService } from '../../common/services/shared.service';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class MyProfileService {\n  constructor(public authHttp:AuthHttp, private  _sharedService: SharedService) {\n  }\n\n  public load(): Observable<RestReponse> {\n    return this.authHttp.get(this._sharedService.apiUrl + 'my_profile/load')\n      .map((data: Response) => <RestReponse> data.json());\n  }\n\n  public save(myProfile: MyProfile): Observable<RestReponse> {\n    return this.authHttp.put(this._sharedService.apiUrl + 'my_profile/update', JSON.stringify(myProfile), {headers: contentHeaders})\n      .map((response: Response) => <RestReponse>response.json());\n  }\n}\n"],"sourceRoot":"/source/"}