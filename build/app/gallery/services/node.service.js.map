{"version":3,"sources":["app/gallery/services/node.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;YAUA;gBAGE,qBAAmB,QAAiB,EAAW,cAA6B;oBAAzD,aAAQ,GAAR,QAAQ,CAAS;oBAAW,mBAAc,GAAd,cAAc,CAAe;oBAC1E,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC;gBAClD,CAAC;gBAEM,0BAAI,GAAX;oBACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC;yBAClE,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAa,QAAQ,CAAC,IAAI,EAAE,EAA5B,CAA4B,CAAC,CAAC;gBAC/D,CAAC;gBAXH;oBAAC,iBAAU,EAAE;;+BAAA;gBAYb,kBAAC;YAAD,CAXA,AAWC,IAAA;YAXD,qCAWC,CAAA","file":"app/gallery/services/node.service.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport { Response } from '@angular/http';\nimport { AuthHttp } from 'angular2-jwt';\nimport { contentHeaders } from '../../common/headers';\nimport { RestReponse } from '../../common/rest.response';\nimport { SharedService } from '../../common/services/shared.service';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class NodeService {\n  public itemsPerPage:number;\n\n  constructor(public authHttp:AuthHttp, private  _sharedService: SharedService) {\n    this.itemsPerPage = _sharedService.itemsPerPage;\n  }\n\n  public load(): Observable<RestReponse> {\n    return this.authHttp.get(this._sharedService.apiUrl + 'node/load/23')\n      .map((response: Response) => <RestReponse>response.json());\n  }\n}\n"],"sourceRoot":"/source/"}