{"version":3,"sources":["app/errorpages/components/page.error.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAYA;gBAKE,mBAAmB,MAAa,EAAS,cAA6B,EAAU,cAA8B;oBAA3F,WAAM,GAAN,MAAM,CAAO;oBAAS,mBAAc,GAAd,cAAc,CAAe;oBAAU,mBAAc,GAAd,cAAc,CAAgB;oBAH/G,cAAS,GAAY,KAAK,CAAC;oBAC3B,mBAAc,GAAY,KAAK,CAAC;gBAG/B,CAAC;gBAEF,4BAAQ,GAAR;oBACC,IAAI,MAAM,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClF,IAAI,CAAC;wBACC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC5C,MAAM,GAAG,IAAI,CAAC;oBACd,CAAE;oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACT,MAAM,GAAG,KAAK,CAAC;oBACnB,CAAC;oBAEH,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,eAAe,CAAC,CAAC,CAAC;4BAC7F,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;4BACtB,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBACrC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,2DAA2D,CAAC,CAAC,CAAC;4BAC/I,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC5B,CAAC;oBACF,CAAC;gBACF,CAAC;gBAhCF;oBAAC,gBAAS,CAAC;wBACV,QAAQ,EAAE,YAAY;wBACtB,WAAW,EAAE,6CAA6C;wBAC1D,SAAS,EAAE,CAAC,uCAAuC,CAAC;wBACpD,UAAU,EAAE,CAAC,0BAAiB,CAAC;qBAC/B,CAAC;;6BAAA;gBA4BF,gBAAC;YAAD,CA3BA,AA2BC,IAAA;YA3BD,iCA2BC,CAAA","file":"app/errorpages/components/page.error.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute } from '@angular/router';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport { Http } from '@angular/http';\nimport { SharedService } from '../../common/services/shared.service';\n\n@Component({\n\tselector: \"page-error\",\n\ttemplateUrl: \"./app/errorpages/components/page.error.html\",\n\tstyleUrls: ['./app/errorpages/components/error.css'],\n\tdirectives: [ROUTER_DIRECTIVES]\n})\nexport class PageError implements OnInit {\n\tmessage: string;\n\tneedLogin: boolean = false;\n\tneedPermission: boolean = false;\n\n  constructor(public router:Router, public _sharedService: SharedService, private activatedRoute: ActivatedRoute) {\n  }\n\n\tngOnInit() {\n\t\tlet ifJson = false;\n\t\tthis.message = decodeURIComponent(this.activatedRoute.snapshot.params['message']);\n\t\ttry {\n        this.message = JSON.parse(this.message);\n\t\t\t\tifJson = true;\n    } catch (e) {\n        ifJson = false;\n    }\n\n\t\tif (ifJson) {\n\t\t\tif (this.message['error'] === 'Unauthorized' && this.message['message'] === 'Access Denied') {\n\t\t\t\tthis.needLogin = true;\n\t\t\t\tlocalStorage.removeItem('id_token');\n\t\t\t} else if (this.message['error'] === 'Forbidden' && this.message['exception'] === 'org.springframework.security.access.AccessDeniedException') {\n\t\t\t\tthis.needPermission = true;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"sourceRoot":"/source/"}