{"version":3,"sources":["app/common/components/custom.modal.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;qDAiDa,KAAK,sBAqEZ,aAAa,EAON,sBAAsB;;;;;;;;;;;;;YA/GnC,8BAA8B;YAC9B;gBAAuC,qCAAgB;gBAAvD;oBAAuC,8BAAgB;gBASvD,CAAC;gBALG,qCAAS,GAAT;oBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBACpB,CAAC;gBACL,CAAC;gBACL,wBAAC;YAAD,CATA,AASC,CATsC,iCAAgB,GAStD;YATD,iDASC,CAAA;YAGD;gBAA8C,4CAA0C;gBAIpF,kCACI,KAAY;oBAEZ,kBACS,EAAE,OAAA,KAAK,EAAE,EACd,CAAC,OAAO,EAAE,aAAa,CAAC,EACnB,iBAAiB,CAEzB,CAAC;gBACN,CAAC;gBACL,+BAAC;YAAD,CAdA,AAcC,CAd6C,wCAAuB,GAcpE;YAdD,+DAcC,CAAA;YAQY,mBAAA,KAAK,GAAG,sBAAS,CAAA,CAAC;YAK/B,+BAA+B;YA0D/B;gBAEI,4BAAoB,MAAoC;oBAApC,WAAM,GAAN,MAAM,CAA8B;gBAAG,CAAC;gBA3DhE;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,UAAU,EAAE,CAAE,yBAAgB,CAAE;wBAChC,MAAM,EAAE,CAAC,gIASX,EAAE,4sBA+BF;yBACG;wBACD,QAAQ,EACZ,sTASO;qBACN,CAAC;;sCAAA;gBAIF,yBAAC;YAAD,CAHA,AAGC,IAAA;YAHD,mDAGC,CAAA;YAED,sBAAsB;YAChB,aAAa,GAAuB;gBACtC,KAAK,EAAE,UAAA,KAAK,IAAI,OAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,EAAnC,CAAmC;gBACnD,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,SAAS;aACrB,CAAC;YAGW,oCAAA,sBAAsB,GAC5B,gCAAe;gBAClB,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;gBACnC,EAAE,OAAO,EAAE,uCAAsB,EAAE,QAAQ,EAAE,kBAAkB,EAAE;gBACjE,EAAE,OAAO,EAAE,mCAAkB,EAAE,QAAQ,EAAE,aAAa,EAAE;cAC3D,CAAA,CAAC","file":"app/common/components/custom.modal.component.js","sourcesContent":["import { TemplateRef, Component } from '@angular/core';\nimport { NgTemplateOutlet } from '@angular/common';\n\nimport {\n    DialogRef,\n    Modal as BaseModal,\n    MODAL_PROVIDERS,\n    ModalDropInFactory,\n    ModalBackdropComponent,\n    ModalOpenContextBuilder,\n    ModalOpenContext,\n    FluentAssignMethod\n} from 'angular2-modal';\n\n/** FILE: modal-context.ts **/\nexport class InAppModalContext extends ModalOpenContext {\n\n    title: string;\n    templateRef: TemplateRef<any>;\n    normalize(): void {\n        if (!this.message) {\n          this.message = '';\n        }\n    }\n}\n\n\nexport class InAppModalContextBuilder extends ModalOpenContextBuilder<InAppModalContext> {\n    title: FluentAssignMethod<string, this>;\n    templateRef: FluentAssignMethod<TemplateRef<any>, this>;\n\n    constructor(\n        modal: Modal\n    ) {\n        super(\n            <any>{ modal },\n            ['title', 'templateRef'],\n            <any>InAppModalContext\n            // https://github.com/Microsoft/TypeScript/issues/7234\n        );\n    }\n}\n\n\n/** FILE: modal.ts **/\nexport interface InAppModal extends BaseModal {\n    alert(): InAppModalContextBuilder;\n}\n\nexport const Modal = BaseModal;\nexport type Modal = InAppModal;\n\n\n\n/** FILE: modal-backdrop.ts **/\n@Component({\n    selector: 'modal-backdrop',\n    directives: [ NgTemplateOutlet ],\n    styles: [`\n.in-app-modal-backdrop {\n\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n}`, `\narticle {\n    margin: auto;\n    width: 600px;\n    background: inherit;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    border-radius: 6px;\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);\n    overflow: hidden;\n}\narticle:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: inherit;\n    -webkit-filter: blur(10px) saturate(2);\n    filter: blur(10px) saturate(2);\n}\narticle .title {\n    padding: 8px;\n    background: rgba(235, 235, 235, 0.85);\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n    font-size:24px;\n    text-align: center;\n}\narticle .content {\n    padding: 8px;\n    background: rgba(255, 255, 255, 0.66);\n}`\n    ],\n    template:\n`<div class=\"in-app-modal-backdrop\">\n    <article>\n        <div class=\"title\">\n            <span>{{dialog.context.title}}</span>\n        </div>\n        <div class=\"content\">\n            <template [ngTemplateOutlet]=\"dialog.context.templateRef\"></template>\n        </div>\n    </article>\n</div>`\n})\nexport class InAppModalBackdrop {\n\n    constructor(private dialog: DialogRef<InAppModalContext>) {}\n}\n\n/** FILE: index.ts **/\nconst dropInFactory: ModalDropInFactory = {\n    alert: modal => new InAppModalContextBuilder(modal),\n    prompt: undefined,\n    confirm: undefined\n};\n\n\nexport const IN_APP_MODAL_PROVIDERS: any[] = [\n    ...MODAL_PROVIDERS,\n    { provide: Modal, useClass: Modal },\n    { provide: ModalBackdropComponent, useValue: InAppModalBackdrop },\n    { provide: ModalDropInFactory, useValue: dropInFactory }\n];\n"],"sourceRoot":"/source/"}