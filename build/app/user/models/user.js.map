{"version":3,"sources":["app/user/models/user.ts"],"names":[],"mappings":";;;;;;;YAEA;gBAWE,cAAY,EAAU,EACpB,QAAgB,EAChB,KAAa,EACb,QAAgB,EAChB,MAAa,EACb,KAAY,EACZ,gBAAyB;oBACvB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;oBACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;gBAC7C,CAAC;gBACH,WAAC;YAAD,CA1BA,AA0BC,IAAA;YA1BD,uBA0BC,CAAA","file":"app/user/models/user.js","sourcesContent":["import { LoginAttempt } from './login.attempt';\n\nexport class User {\n  id: number;\n  username: string;\n  email: string;\n  password: string;\n  defaultGroupId: number;\n  groups: any[];\n  roles: any[];\n  accountNonLocked: boolean;\n  loginAttempt: LoginAttempt;\n\n  constructor(id: number,\n    username: string,\n    email: string,\n    password: string,\n    groups: any[],\n    roles: any[],\n    accountNonLocked: boolean) {\n      this.id = id;\n      this.username = username;\n      this.email = email;\n      this.password = password;\n      this.groups = groups;\n      this.roles = roles;\n      this.accountNonLocked = accountNonLocked;\n  }\n}\n"],"sourceRoot":"/source/"}