{"version":3,"file":"dialog-ref.js","sourceRoot":"","sources":["dialog-ref.ts"],"names":[],"mappings":";AAEA,wBAAwB,cAAc,CAAC,CAAA;AAEvC,sBAAiC,oBAAoB,CAAC,CAAA;AAItD;;GAEG;AACH;IAsBE,mBAAmB,OAAW;QAAX,YAAO,GAAP,OAAO,CAAI;QAHtB,oBAAe,GAA0B,IAAI,wBAAgB,EAAO,CAAC;QACrE,eAAU,GAAkB,IAAI,iBAAO,EAAQ,CAAC;QAGtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IAClD,CAAC;IAMD,sBAAI,6BAAM;QAJV;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;QACtC,CAAC;;;OAAA;IAED;;OAEG;IACH,yBAAK,GAAL,UAAM,MAAkB;QAAxB,iBAQC;QARK,sBAAkB,GAAlB,aAAkB;QACtB,IAAM,MAAM,GAAG;YACb,KAAI,CAAC,OAAO,EAAE,CAAC;YACf,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC;QACF,IAAI,CAAC,SAAS,CAAU,aAAa,CAAC;aACnC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,KAAK,IAAI,IAAI,MAAM,EAAE,EAA1B,CAA0B,CAAC;aACzC,KAAK,CAAC,MAAM,CAAC,CAAC;IACnB,CAAC;IAED;;;;;;OAMG;IACH,2BAAO,GAAP;QAAA,iBAQC;QAPC,IAAM,QAAQ,GAAG;YACf,KAAI,CAAC,OAAO,EAAE,CAAC;YACf,KAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;QAChC,CAAC,CAAC;QACF,IAAI,CAAC,SAAS,CAAU,eAAe,CAAC;aACrC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,KAAK,IAAI,IAAI,QAAQ,EAAE,EAA5B,CAA4B,CAAC;aAC3C,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,2BAAO,GAAP;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAEO,6BAAS,GAAjB,UAAqB,IAAqC;QACxD,IAAM,QAAQ,GAAyB,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAChF,EAAE,GAAa,QAAQ,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEpF,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC;IACzD,CAAC;IACH,gBAAC;AAAD,CAAC,AA3ED,IA2EC;AA3EY,iBAAS,YA2ErB,CAAA","sourcesContent":["import { ComponentRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { PromiseCompleter } from '../framework/utils';\nimport { ModalComponent } from '../models/tokens';\n\n\n/**\n * API to an open modal window.\n */\nexport class DialogRef<T> {\n  /**\n   * The reference to the component ref.\n   * @internal\n   * @return {ComponentRef<any>}\n   */\n  contentRef: ComponentRef<any>;\n\n  /**\n   * States if the modal is inside a specific element.\n   */\n  public inElement: boolean;\n\n  /**\n   * Fired before dialog is destroyed.\n   * No need to unsubscribe, done automatically.\n   */\n  public onDestroy: Observable<void>;\n\n  private _resultDeferred: PromiseCompleter<any> = new PromiseCompleter<any>();\n  private _onDestroy: Subject<void> = new Subject<void>();\n\n  constructor(public context?: T) {\n    this.onDestroy = this._onDestroy.asObservable();\n  }\n\n  /**\n   * A Promise that is resolved on a close event and rejected on a dismiss event.\n   * @returns {Promise<T>|any|*|Promise<any>}\n   */\n  get result(): Promise<any> {\n    return this._resultDeferred.promise;\n  }\n\n  /**\n   *  Close the modal with a return value, i.e: result.\n   */\n  close(result: any = null) {\n    const _close = () => {\n      this.destroy();\n      this._resultDeferred.resolve(result);\n    };\n    this._fireHook<boolean>('beforeClose')\n      .then(value => value !== true && _close())\n      .catch(_close);\n  }\n\n  /**\n   *  Close the modal without a return value, i.e: cancelled.\n   *  This call is automatically invoked when a user either:\n   *  - Presses an exit keyboard key (if configured).\n   *  - Clicks outside of the modal window (if configured).\n   *  Usually, dismiss represent a Cancel button or a X button.\n   */\n  dismiss() {\n    const _dismiss = () => {\n      this.destroy();\n      this._resultDeferred.reject();\n    };\n    this._fireHook<boolean>('beforeDismiss')\n      .then(value => value !== true && _dismiss())\n      .catch(_dismiss);\n  }\n\n  destroy() {\n    this._onDestroy.next(null);\n    this._onDestroy.complete();\n  }\n\n  private _fireHook<T>(name: 'beforeClose' | 'beforeDismiss'): Promise<T> {\n    const instance: ModalComponent<this> = this.contentRef && this.contentRef.instance,\n      fn: Function = instance && typeof instance[name] === 'function' && instance[name];\n\n    return Promise.resolve(fn ? fn.call(instance) : false);\n  }\n}\n"]}