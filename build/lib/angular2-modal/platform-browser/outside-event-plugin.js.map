{"version":3,"file":"outside-event-plugin.js","sourceRoot":"","sources":["outside-event-plugin.ts"],"names":[],"mappings":"AAAA,uBAAuB;AACvB,wGAAwG;;;;;;;;;;;AAExG,qBAA2B,eAAe,CAAC,CAAA;AAE3C,sBAAqB,oBAAoB,CAAC,CAAA;AAE1C,IAAM,QAAQ,GAAG;IACb,YAAY,EAAE,OAAO;IACrB,gBAAgB,EAAE,WAAW;IAC7B,cAAc,EAAE,SAAS;IACzB,gBAAgB,EAAE,WAAW;CAChC,CAAC;AAEF;;;;;;GAMG;AACH,yCAAyC,OAAoB,EAAE,OAAwB;IACnF,MAAM,CAAC,UAAC,KAAK;QACT,IAAI,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,GAAG,CAAC;YACA,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC;YACX,CAAC;QACL,CAAC,QAAQ,OAAO,CAAC,UAAU,IAAI,CAAE,OAAO,GAAG,OAAO,CAAC,UAAU,CAAE,EAAE;QAEjE,OAAO,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC,CAAC;AACN,CAAC;AAGD;IAGI;QACI,iCAAiC;QACjC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,OAAO,QAAQ,CAAC,gBAAgB,KAAK,UAAU,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,gBAAgB,GAAG,YAAW,CAAC;QACxC,CAAC;IACL,CAAC;IAED,wCAAQ,GAAR,UAAS,SAAiB;QACtB,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAED,gDAAgB,GAAhB,UAAiB,OAAoB,EAAE,SAAiB,EAAE,OAAiB;QACvE,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAEpC,8EAA8E;QAC9E,4FAA4F;QAC5F,yFAAyF;QACzF,iCAAiC;QACjC,uFAAuF;QACvF,IAAM,aAAa,GAAG;YAClB,IAAM,QAAQ,GACZ,+BAA+B,CAAC,OAAO,EAAE,UAAA,GAAG,IAAI,OAAA,IAAI,CAAC,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,EAAZ,CAAY,CAAC,EAAnC,CAAmC,CAAC,CAAC;YAEvF,sCAAsC;YACtC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAChE,MAAM,CAAC,cAAM,OAAA,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAlE,CAAkE,CAAC;QACpF,CAAC,CAAC;QAEF,0FAA0F;QAC1F,2BAA2B;QAC3B,wFAAwF;QACxF,wFAAwF;QACxF,wFAAwF;QACxF,qCAAqC;QACrC,wFAAwF;QACxF,iFAAiF;QACjF,qFAAqF;QACrF,mCAAmC;QACnC,EAAE;QACF,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAC1B,IAAI,EAAY,CAAC;YACjB,UAAU,CAAC,cAAM,OAAA,EAAE,GAAG,aAAa,EAAE,EAApB,CAAoB,EAAE,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,cAAM,OAAA,EAAE,EAAE,EAAJ,CAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAsB,GAAtB,UAAuB,MAAc,EAAE,SAAiB,EAAE,OAAiB;QACvE,MAAM,eAAe,CAAC;IAC1B,CAAC;IApDL;QAAC,iBAAU,EAAE;;6BAAA;IAqDb,4BAAC;AAAD,CAAC,AApDD,IAoDC;AApDY,6BAAqB,wBAoDjC,CAAA","sourcesContent":["// heavily inspired by:\r\n// http://www.bennadel.com/blog/3025-creating-custom-dom-and-host-event-bindings-in-angular-2-beta-6.htm\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { noop } from '../framework/utils';\r\n\r\nconst eventMap = {\r\n    clickOutside: 'click',\r\n    mousedownOutside: 'mousedown',\r\n    mouseupOutside: 'mouseup',\r\n    mousemoveOutside: 'mousemove'\r\n};\r\n\r\n/**\r\n * An event handler factory for event handlers that bubble the event to a given handler\r\n * if the event target is not an ancestor of the given element.\r\n * @param element\r\n * @param handler\r\n * @returns {function(any): undefined}\r\n */\r\nfunction bubbleNonAncestorHandlerFactory(element: HTMLElement, handler: (event) => void) {\r\n    return (event) => {\r\n        let current = event.target;\r\n        do {\r\n            if (current === element) {\r\n                return;\r\n            }\r\n        } while (current.parentNode && ( current = current.parentNode ));\r\n\r\n        handler(event);\r\n    };\r\n}\r\n\r\n@Injectable()\r\nexport class DOMOutsideEventPlugin { // extends EventManagerPlugin\r\n    manager: EventManager;\r\n\r\n    constructor() {\r\n        // TODO: use DI factory for this.\r\n        if (!document || typeof document.addEventListener !== 'function') {\r\n            this.addEventListener = noop as any;\r\n        }\r\n    }\r\n\r\n    supports(eventName: string): boolean {\r\n        return eventMap.hasOwnProperty(eventName);\r\n    }\r\n\r\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\r\n        const zone = this.manager.getZone();\r\n\r\n        // A Factory that registers the event on the document, instead of the element.\r\n        // the handler is created at runtime, and it acts as a propagation/bubble predicate, it will\r\n        // bubble up the event (i.e: execute our original event handler) only if the event targer\r\n        // is an ancestor of our element.\r\n        // The event is fired inside the angular zone so change detection can kick into action.\r\n        const onceOnOutside = () => {\r\n            const listener =\r\n              bubbleNonAncestorHandlerFactory(element, evt => zone.runGuarded(() => handler(evt)));\r\n\r\n            // mimic BrowserDomAdapter.onAndCancel\r\n            document.addEventListener(eventMap[eventName], listener, false);\r\n            return () => document.removeEventListener(eventMap[eventName], listener, false);\r\n        };\r\n\r\n        // we run the event registration for the document in a different zone, this will make sure\r\n        // change detection is off.\r\n        // It turns out that if a component that use DOMOutsideEventPlugin is built from a click\r\n        // event, we might get here before the event reached the document, causing a quick false\r\n        // positive handling (when stopPropagation() was'nt invoked). To workaround this we wait\r\n        // for the next vm turn and register.\r\n        // Event registration returns a dispose function for that event, angular use it to clean\r\n        // up after component get's destroyed. Since we need to return a dispose function\r\n        // synchronously we have to put a wrapper for it since we will get it asynchronously,\r\n        // i.e: after we need to return it.\r\n        //\r\n        return zone.runOutsideAngular(() => {\r\n            let fn: Function;\r\n            setTimeout(() => fn = onceOnOutside(), 0);\r\n            return () => fn();\r\n        });\r\n    }\r\n\r\n    addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\r\n        throw 'not supported';\r\n    }\r\n}\r\n"]}