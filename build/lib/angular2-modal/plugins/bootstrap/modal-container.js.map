{"version":3,"file":"modal-container.js","sourceRoot":"","sources":["modal-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ComponentResolver,\n  ViewContainerRef,\n  ReflectiveInjector,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  ElementRef,\n  trigger,\n  state,\n  style,\n  keyframes,\n  animate,\n  transition\n} from '@angular/core';\n\nimport { DialogRef, ModalCompileConfig } from '../../angular2-modal';\n\nimport { Modal } from './modal';\nimport { supportsKey } from '../../framework/utils';\nimport { BSModalContext } from './modal-context';\n\n/**\n * A component that acts as a top level container for an open modal window.\n */\n@Component({\n  selector: 'modal-container',\n  host: {\n    'tabindex': '-1',\n    'role': 'dialog',\n    'class': 'modal',\n    'style': 'display: block',\n    '[style.position]': 'position',\n    '(body:keydown)': 'documentKeypress($event)'\n  },\n  animations: [\n    trigger('fade', [\n      transition('void => in', [\n        animate('100ms linear', keyframes([\n          style({ opacity: 0, transform: 'translate(0, -25%)' }),\n          style({ opacity: 0, transform: 'translate(0, -25%)' })\n        ])),\n        animate('300ms linear', keyframes([\n          style({ opacity: 0, transform: 'translate(0, -25%)', offset: 0 }),\n          style({ opacity: 1, transform: 'translate(0, -12.5%)', offset: 0.5 }),\n          style({ opacity: 1, transform: 'translate(0, 0)', offset: 1 })\n        ]))\n      ]),\n      state('out',  style({ opacity: 0, transform: 'translate(0, -25%)'} )),\n      transition('in => out', [\n        animate('150ms linear', keyframes([\n          style({ opacity: 1, transform: 'translate(0, 0)' }),\n          style({ opacity: 0, transform: 'translate(0, -12.5%)' }),\n        ]))\n      ])\n    ])\n  ],\n  encapsulation: ViewEncapsulation.None,\n  /* tslint:disable */\n  template: `<div [ngClass]=\"dialog.context.dialogClass\" \n          [class.modal-lg]=\"dialog.context.size == \\'lg\\'\"\n          [class.modal-sm]=\"dialog.context.size == \\'sm\\'\"\n          @fade=\"fadeState\">\n         <div class=\"modal-content\"              \n              style=\"display:block\"              \n              role=\"document\"\n              (clickOutside)=\"onClickOutside()\">\n            <div style=\"display: none\" #modalDialog></div>\n         </div>\n    </div>`\n  /* tslint:enable */\n})\nexport class BSModalContainer implements AfterViewInit {\n  public position: string;\n\n  fadeState: 'in' | 'out' = 'in';\n\n  @ViewChild('modalDialog', {read: ViewContainerRef}) private _viewContainer: ViewContainerRef;\n\n  constructor(public dialog: DialogRef<BSModalContext>,\n              private el: ElementRef,\n              private _compileConfig: ModalCompileConfig,\n              private _modal: Modal,\n              private _cr: ComponentResolver) {\n    if (!dialog.inElement) {\n      this.position = null;\n    } else {\n      this.position = 'absolute';\n    }\n    dialog.onDestroy.subscribe(() => this.fadeState = 'out');\n  }\n\n  ngAfterViewInit() {\n    this._cr.resolveComponent(this._compileConfig.component)\n      .then(cmpFactory => {\n        const vcr = this._viewContainer,\n          bindings = this._compileConfig.bindings,\n          ctxInjector = vcr.parentInjector;\n\n        const childInjector = Array.isArray(bindings) && bindings.length > 0 ?\n          ReflectiveInjector.fromResolvedProviders(bindings, ctxInjector) : ctxInjector;\n\n        if (this.el.nativeElement) {\n          this.el.nativeElement.focus();\n        }\n\n        this.dialog.contentRef = vcr.createComponent(cmpFactory, vcr.length, childInjector);\n      });\n  }\n\n  onClickOutside() {\n    if (this._modal.isTopMost(this.dialog) && !this.dialog.context.isBlocking)\n      this.dialog.dismiss();\n  }\n\n  documentKeypress(event: KeyboardEvent) {\n    // check that this modal is the last in the stack.\n    if (!this._modal.isTopMost(this.dialog)) return;\n\n\n    if (supportsKey(event.keyCode, <any>this.dialog.context.keyboard)) {\n      this.dialog.dismiss();\n    }\n  }\n}\n"]}