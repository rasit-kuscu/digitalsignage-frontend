{"version":3,"file":"dialog-form-modal.js","sourceRoot":"","sources":["dialog-form-modal.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAWO,eAAe,CAAC,CAAA;AAEvB,uBAAiD,qBAAqB,CAAC,CAAA;AACvE,2BAAwB,yBAAyB,CAAC,CAAA;AAsBlD;;GAEG;AAYH;IAAA;QAOI;;;WAGG;QACc,kBAAa,GAAG,IAAI,mBAAY,EAAuB,CAAC;IAM7E,CAAC;IAJG,kCAAO,GAAP,UAAQ,GAAQ,EAAE,MAAkB;QAChC,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,KAAA,GAAG,EAAE,QAAA,MAAM,EAAC,CAAC,CAAC;IAC3C,CAAC;IAXD;QAAC,YAAK,EAAE;;qDAAA;IAMR;QAAC,aAAM,EAAE;;2DAAA;IAtBb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EACZ,0NAKO;SACN,CAAC;;wBAAA;IAkBF,uBAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,wBAAgB,mBAiB5B,CAAA;AAED;;;GAGG;AAYH;IAII,yBAAmB,MAA+B,EAC9B,cAAkC,EAClC,GAAsB;QAFvB,WAAM,GAAN,MAAM,CAAyB;QAC9B,mBAAc,GAAd,cAAc,CAAoB;QAClC,QAAG,GAAH,GAAG,CAAmB;QACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAClC,CAAC;IAED,yCAAe,GAAf;QAAA,iBAYC;QAXG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;aAC1C,IAAI,CAAC,UAAA,UAAU;YACZ,IAAM,GAAG,GAAG,KAAI,CAAC,cAAc,EAC3B,QAAQ,GAAG,KAAI,CAAC,cAAc,CAAC,QAAQ,EACvC,WAAW,GAAG,GAAG,CAAC,cAAc,CAAC;YAErC,IAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC;gBAChE,yBAAkB,CAAC,qBAAqB,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,WAAW,CAAC;YAClF,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU;gBACzB,GAAG,CAAC,eAAe,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACX,CAAC;IAED,uCAAa,GAAb,UAAc,MAA2B;QACrC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAxBD;QAAC,gBAAS,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,uBAAgB,EAAC,CAAC;;2DAAA;IAbvD;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9B,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EACZ,kPAIQ;SACP,CAAC;;uBAAA;IA4BF,sBAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,uBAAe,kBA2B3B,CAAA;AAkBD;IAGI,oBAAmB,MAA+B;QAA/B,WAAM,GAAN,MAAM,CAAyB;QAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAClC,CAAC;IArBL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9B,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EACZ,qYAQW;SACV,CAAC;;kBAAA;IAQF,iBAAC;AAAD,CAAC,AAND,IAMC;AANY,kBAAU,aAMtB,CAAA","sourcesContent":["import {    \n    Component,\n    ComponentResolver,\n    ViewContainerRef,\n    ReflectiveInjector,\n    ViewChild,\n    ViewEncapsulation,\n    AfterViewInit,\n    Input, \n    Output, \n    EventEmitter\n} from '@angular/core';\n\nimport {ModalComponent, ModalCompileConfig} from '../../models/tokens';\nimport {DialogRef} from '../../models/dialog-ref';\nimport {DialogPreset} from './presets/dialog-preset';\nimport {DropInPreset} from './presets/dropin-preset';\n\nexport interface VEXButtonHandler {\n    (cmp:  ModalComponent<DialogPreset>, $event: MouseEvent): void;\n}\n\n/**\n * Interface for button definition\n */\nexport interface VEXButtonConfig {\n    cssClass: string;\n    caption: string;\n    onClick: VEXButtonHandler;\n}\n\nexport interface VEXButtonClickEvent {\n    btn: VEXButtonConfig;\n    $event: MouseEvent;\n}\n\n/**\n * A Dialog is a\n */\n@Component({\n    selector: 'vex-dialog-buttons',\n    encapsulation: ViewEncapsulation.None,\n    template:\n`<div class=\"vex-dialog-buttons\">\n    <button type=\"button\" \n         *ngFor=\"let btn of buttons;\"\n         [class]=\"btn.cssClass\"\n         (click)=\"onClick(btn, $event)\">{{btn.caption}}</button>\n</div>`\n})\nexport class VEXDialogButtons {\n\n    /**\n     * A collection of button configurations, each configuration is a button to display.\n     */\n    @Input() public buttons: VEXButtonConfig[];\n\n    /**\n     * Emitted when a button was clicked\n     * @type {EventEmitter<VEXButtonClickEvent>}\n     */\n    @Output() public onButtonClick = new EventEmitter<VEXButtonClickEvent>();\n\n    onClick(btn: any, $event: MouseEvent) {\n        $event.stopPropagation();\n        this.onButtonClick.emit({btn, $event});\n    }\n}\n\n/**\n * A Dialog with customized buttons wrapped in a form.\n * \n */\n@Component({\n    selector: 'modal-dialog',\n    directives: [VEXDialogButtons],\n    encapsulation: ViewEncapsulation.None,\n    template:\n`<form class=\"vex-dialog-form\">\n    <div style=\"display: none\" #modalDialog></div> \n    <vex-dialog-buttons [buttons]=\"context.buttons\"\n                        (onButtonClick)=\"onButtonClick($event)\"></vex-dialog-buttons>\n</form>`\n})\nexport class DialogFormModal implements AfterViewInit, ModalComponent<DialogPreset> {\n    private context: DialogPreset;\n    @ViewChild('modalDialog', {read: ViewContainerRef}) private _viewContainer: ViewContainerRef;\n    \n    constructor(public dialog: DialogRef<DialogPreset>,\n                private _compileConfig: ModalCompileConfig,\n                private _cr: ComponentResolver) {\n        this.context = dialog.context;\n    }\n\n    ngAfterViewInit() {\n        this._cr.resolveComponent(this.context.content)\n            .then(cmpFactory => {\n                const vcr = this._viewContainer,\n                    bindings = this._compileConfig.bindings,\n                    ctxInjector = vcr.parentInjector;\n\n                const childInjector = Array.isArray(bindings) && bindings.length > 0 ?\n                    ReflectiveInjector.fromResolvedProviders(bindings, ctxInjector) : ctxInjector;\n                return this.dialog.contentRef =\n                    vcr.createComponent(cmpFactory, vcr.length, childInjector);\n            });\n    }\n    \n    onButtonClick($event: VEXButtonClickEvent) {\n        $event.btn.onClick(this, $event.$event);\n    }\n}\n\n@Component({\n    selector: 'drop-in-dialog',\n    directives: [VEXDialogButtons],\n    encapsulation: ViewEncapsulation.None,\n    template: \n`<div class=\"vex-dialog-message\">{{context.message}}</div>\n    <div *ngIf=\"context.showInput\" class=\"vex-dialog-input\">\n        <input autofocus \n               name=\"vex\" \n               type=\"text\" \n               class=\"vex-dialog-prompt-input\"\n               [(ngModel)]=\"context.defaultResult\" \n               placeholder=\"{{context.placeholder}}\">\n    </div>`\n})\n\nexport class FormDropIn implements ModalComponent<DropInPreset> {\n    private context: DropInPreset;\n\n    constructor(public dialog: DialogRef<DropInPreset>) {\n        this.context = dialog.context;\n    }\n}\n"]}